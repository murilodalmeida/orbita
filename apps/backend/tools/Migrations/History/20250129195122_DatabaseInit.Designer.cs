// <auto-generated />
using System;
using FwksLabs.Orbita.Infra.Postgres.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FwksLabs.ResumeApp.Migrations.History
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250129195122_DatabaseInit")]
    partial class DatabaseInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FwksLabs.ResumeApp.Core.Entities.EducationRecordEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("Degree")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FieldOfStudy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Organization")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ResumeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("PK_EducationRecords");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("IX_UK_EducationRecords");

                    b.HasIndex("ResumeId");

                    b.ToTable("EducationRecords", "App");
                });

            modelBuilder.Entity("FwksLabs.ResumeApp.Core.Entities.ExperienceRecordEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ResumeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("PK_ExperienceRecords");

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("IX_UK_ExperienceRecords");

                    b.HasIndex("ResumeId");

                    b.ToTable("ExperienceRecords", "App");
                });

            modelBuilder.Entity("FwksLabs.ResumeApp.Core.Entities.ResumeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Handle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uuid");

                    b.Property<string>("Summary")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PK_Resumes");

                    b.HasIndex("Handle")
                        .IsUnique();

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("IX_UK_Resumes");

                    b.ToTable("Resumes", "App");
                });

            modelBuilder.Entity("FwksLabs.ResumeApp.Core.Entities.SkillEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ResumeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("PK_Skills");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ReferenceId")
                        .IsUnique()
                        .HasDatabaseName("IX_UK_Skills");

                    b.HasIndex("ResumeId");

                    b.ToTable("Skills", "App");
                });

            modelBuilder.Entity("FwksLabs.ResumeApp.Core.Entities.EducationRecordEntity", b =>
                {
                    b.HasOne("FwksLabs.ResumeApp.Core.Entities.ResumeEntity", "Resume")
                        .WithMany("Education")
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Resumes_ResumeId");

                    b.OwnsOne("FwksLabs.ResumeApp.Core.ValueObjects.LocationValue", "Location", b1 =>
                        {
                            b1.Property<Guid>("EducationRecordEntityId")
                                .HasColumnType("uuid");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("EducationRecordEntityId");

                            b1.ToTable("EducationRecords", "App");

                            b1.ToJson("Location");

                            b1.WithOwner()
                                .HasForeignKey("EducationRecordEntityId");
                        });

                    b.OwnsOne("FwksLabs.ResumeApp.Core.ValueObjects.TimeSpanValue", "Period", b1 =>
                        {
                            b1.Property<Guid>("EducationRecordEntityId")
                                .HasColumnType("uuid");

                            b1.Property<DateOnly?>("End")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("Start")
                                .HasColumnType("date");

                            b1.HasKey("EducationRecordEntityId");

                            b1.ToTable("EducationRecords", "App");

                            b1.ToJson("Period");

                            b1.WithOwner()
                                .HasForeignKey("EducationRecordEntityId");
                        });

                    b.Navigation("Location");

                    b.Navigation("Period");

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("FwksLabs.ResumeApp.Core.Entities.ExperienceRecordEntity", b =>
                {
                    b.HasOne("FwksLabs.ResumeApp.Core.Entities.ResumeEntity", "Resume")
                        .WithMany("Experience")
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Resumes_ResumeId");

                    b.OwnsOne("FwksLabs.ResumeApp.Core.ValueObjects.LocationValue", "Location", b1 =>
                        {
                            b1.Property<Guid>("ExperienceRecordEntityId")
                                .HasColumnType("uuid");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ExperienceRecordEntityId");

                            b1.ToTable("ExperienceRecords", "App");

                            b1.ToJson("Location");

                            b1.WithOwner()
                                .HasForeignKey("ExperienceRecordEntityId");
                        });

                    b.OwnsOne("FwksLabs.ResumeApp.Core.ValueObjects.TimeSpanValue", "Period", b1 =>
                        {
                            b1.Property<Guid>("ExperienceRecordEntityId")
                                .HasColumnType("uuid");

                            b1.Property<DateOnly?>("End")
                                .HasColumnType("date");

                            b1.Property<DateOnly>("Start")
                                .HasColumnType("date");

                            b1.HasKey("ExperienceRecordEntityId");

                            b1.ToTable("ExperienceRecords", "App");

                            b1.ToJson("Period");

                            b1.WithOwner()
                                .HasForeignKey("ExperienceRecordEntityId");
                        });

                    b.Navigation("Location");

                    b.Navigation("Period");

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("FwksLabs.ResumeApp.Core.Entities.ResumeEntity", b =>
                {
                    b.OwnsOne("FwksLabs.ResumeApp.Core.ValueObjects.LocationValue", "Location", b1 =>
                        {
                            b1.Property<Guid>("ResumeEntityId")
                                .HasColumnType("uuid");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ResumeEntityId");

                            b1.ToTable("Resumes", "App");

                            b1.ToJson("Location");

                            b1.WithOwner()
                                .HasForeignKey("ResumeEntityId");
                        });

                    b.OwnsOne("FwksLabs.ResumeApp.Core.ValueObjects.ContactValue", "ContactInformation", b1 =>
                        {
                            b1.Property<Guid>("ResumeEntityId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ResumeEntityId");

                            b1.ToTable("Resumes", "App");

                            b1.ToJson("ContactInformation");

                            b1.WithOwner()
                                .HasForeignKey("ResumeEntityId");
                        });

                    b.OwnsOne("FwksLabs.ResumeApp.Core.ValueObjects.NameValue", "Name", b1 =>
                        {
                            b1.Property<Guid>("ResumeEntityId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Alternate")
                                .HasColumnType("text");

                            b1.Property<string>("First")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Last")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ResumeEntityId");

                            b1.ToTable("Resumes", "App");

                            b1.ToJson("Name");

                            b1.WithOwner()
                                .HasForeignKey("ResumeEntityId");
                        });

                    b.OwnsMany("FwksLabs.ResumeApp.Core.ValueObjects.SocialMediaValue", "Socials", b1 =>
                        {
                            b1.Property<Guid>("ResumeEntityId")
                                .HasColumnType("uuid");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Label")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ResumeEntityId", "__synthesizedOrdinal");

                            b1.ToTable("Resumes", "App");

                            b1.ToJson("Socials");

                            b1.WithOwner()
                                .HasForeignKey("ResumeEntityId");
                        });

                    b.Navigation("ContactInformation")
                        .IsRequired();

                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Socials");
                });

            modelBuilder.Entity("FwksLabs.ResumeApp.Core.Entities.SkillEntity", b =>
                {
                    b.HasOne("FwksLabs.ResumeApp.Core.Entities.ResumeEntity", "Resume")
                        .WithMany("Skills")
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Resumes_ResumeId");

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("FwksLabs.ResumeApp.Core.Entities.ResumeEntity", b =>
                {
                    b.Navigation("Education");

                    b.Navigation("Experience");

                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
